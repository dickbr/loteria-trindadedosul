/* eslint-disable no-restricted-syntax */
import Head from 'next/head';
import { GetStaticProps, NextPage } from 'next';
import { GameDay as GameDayComponent } from '../../components/GameDay';

import { EnumLoterias, getLoteria } from '../../services/api-caixa';
import { getLotoByDay } from '../../utils';
import { styled } from '../../styles';

const Container = styled('div', {
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  gap: 10
});

type ConfigArray = Array<{
  name: string;
  color: string;
  value: string;
  contestDate: string;
}>;

type GameDayProps = {
  color: string;
  data: ConfigArray;
};

const GameDay: NextPage<GameDayProps> = ({ color, data }) => {
  return (
    <Container>
      <Head>
        <title>Jogos do dia</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GameDayComponent games={data} color={color} />

      <span>
        * Valor estimado do pr√≥ximo concurso a ser realizado em{' '}
        {data[0].contestDate}
      </span>
    </Container>
  );
};

export default GameDay;

export const getStaticProps: GetStaticProps = async () => {
  const lotoConfig = getLotoByDay();
  const configArray: ConfigArray = [];

  for (const gameDay of lotoConfig.data) {
    // eslint-disable-next-line no-await-in-loop
    const response = await getLoteria(
      gameDay.name as keyof typeof EnumLoterias
    );

    const contestDate = new Intl.DateTimeFormat('pt-BR', {
      month: '2-digit',
      day: '2-digit',
      year: 'numeric'
    }).format(new Date(response.data_proximo_concurso));

    configArray.push({
      name: response.nome,
      color: gameDay.color,
      value: response.valor_estimado_proximo_concurso.toLocaleString('pt-BR', {
        style: 'currency',
        currency: 'BRL'
      }),
      contestDate
    });
  }

  return {
    props: {
      color: lotoConfig.color,
      data: configArray
    },
    revalidate: 60 * 60 * 16 // 16 hours
  };
};
